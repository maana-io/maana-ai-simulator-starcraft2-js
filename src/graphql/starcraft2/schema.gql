# Scalars
scalar Date
scalar JSON

# Boilerplate
type Info {
  id: ID!
  name: String!
  description: String
}

enum StatusCode {
  Idle
  Starting
  Running
  Stopped
  Ended
  Error
}

enum Mode {
  Training
  Performing
}

input PlayerInput {
  race: Int
  url: String
  token: String
}

input ConfigInput {
  map: ID!
  mode: Mode!
  players: [PlayerInput!]!
}

type Map {
  id: ID!
}

type SimStatus {
  id: ID!
  code: StatusCode!
  errors: [String!]!
}

type Observation {
  step: Int!
  data: [Float!]!
  reward: Float!
  simStatus: SimStatus!
}

type Query {
  listMaps: [Map!]!
  simStatus: SimStatus!
  observe: Observation!
}

type Mutation {
  run(config: ConfigInput!): SimStatus!
  stop: SimStatus!
}
